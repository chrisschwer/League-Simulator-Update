source("~/Dropbox/Coding Projects/LeagueSimulator/R/transform_data.R")
source("~/Dropbox/Coding Projects/LeagueSimulator/R/transform_data.R")
source("~/Dropbox/Coding Projects/LeagueSimulator/R/transform_data.R")
n <- 10000
# complete rerun of model
n <- 10000
saison <- "2023"
# get fixtures via API
fixturesBL <- retrieveResults(league = "78", season = saison)
source("~/Dropbox/Coding Projects/LeagueSimulator/R/retrieveResults.R")
Sys.setenv("RAPIDAPI_KEX", "12664b8598msh74b94990d522ddbp1f362bjsn728fb88d5046")
help("Sys.setenv")
Sys.setenv(RAPIDAPI_KEX = "12664b8598msh74b94990d522ddbp1f362bjsn728fb88d5046")
# complete rerun of model
n <- 10000
saison <- "2023"
# get fixtures via API
fixturesBL <- retrieveResults(league = "78", season = saison)
help ("call_service")
help("jsonlite.call_service")
help("jsonlite")
help("httr.call_service")
help("httr")
Sys.getenv("RAPIDAPI_KEX")
RAPIDAPI_KEY = Sys.getenv("RAPIDAPI_KEX")
require(httr)
require(jsonlite)
url <- "https://api-football-v1.p.rapidapi.com/v3/fixtures"
queryString <- list(
league = league,
season = season
)
response <- VERB("GET", url, query = queryString, add_headers('X-RapidAPI-Key' = RAPIDAPI_KEY, 'X-RapidAPI-Host' = 'api-football-v1.p.rapidapi.com'), content_type("application/octet-stream"))
url <- "https://api-football-v1.p.rapidapi.com/v3/fixtures"
queryString <- list(
league = "78",
season = "2023"
)
response <- VERB("GET", url, query = queryString, add_headers('X-RapidAPI-Key' = RAPIDAPI_KEY, 'X-RapidAPI-Host' = 'api-football-v1.p.rapidapi.com'), content_type("application/octet-stream"))
json_content <- content(response, "text")
# parse the JSON content into a list
parsed_content <- fromJSON(json_content)
# parsed_content is now a list, and you can access its elements
# For example, to get the fixtures:
retrieveResults <- parsed_content$response
View(retrieveResults)
source("~/Dropbox/Coding Projects/LeagueSimulator/R/retrieveResults.R")
# complete rerun of model
n <- 10000
saison <- "2023"
# get fixtures via API
fixturesBL <- retrieveResults(league = "78", season = saison)
fixturesBL2 <- retrieveResults(league = "79", season = saison)
fixturesLiga3 <- retrieveResults(league = "80", season = saison)
# transform data
BL <- transform_data(fixturesBL, TeamList)
library(readr)
TeamList <- read_delim("Dropbox/Coding Projects/Docker/League Simulator Update/RCode/TeamList_2023.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(TeamList)
# complete rerun of model
n <- 10000
saison <- "2023"
# get fixtures via API
fixturesBL <- retrieveResults(league = "78", season = saison)
fixturesBL2 <- retrieveResults(league = "79", season = saison)
fixturesLiga3 <- retrieveResults(league = "80", season = saison)
# transform data
BL <- transform_data(fixturesBL, TeamList)
BL2 <- transform_data(fixturesBL2, TeamList)
Liga3 <- transform_data(fixturesLiga3, TeamList)
View(BL)
View(BL2)
View(Liga3)
source("~/Dropbox/Fussball_Liga_Simulator/calculateELO.R")
View(calculateELO(BL)[[1]])
source("~/Dropbox/Fussball_Liga_Simulator/SaisonSimulieren.R")
source("~/Dropbox/Fussball_Liga_Simulator/Spiel.R")
View(calculateELO(BL)[[1]])
source("~/Dropbox/Fussball_Liga_Simulator/winProbs.R")
source("~/Dropbox/Fussball_Liga_Simulator/winProbs.R")
View(calculateELO(BL)[[1]])
View(calculateELO(BL2)[[1]])
View(calculateELO(Liga3)[[1]])
help("write_csv2")
help("write_csv")
write_csv(BL, "BL.csv", sep=";")
write_csv(BL, "BL.csv")
getwd()
write_csv(BL2, "BL2.csv")
write_csv(Liga3, "Liga3.csv")
write_csv(calculateELO(BL)[[1]], "BL.csv")
write_csv(calculateELO(BL2)[[1]], "BL2.csv")
write_csv(calculateELO(Liga3)[[1]], "Liga3.csv")
View(update_all_leagues.R)
source("~/Downloads/update_all_leagues.R")
setwd("~/")
setwd('/Users/christophschwerdtfeger/Library/CloudStorage/Dropbox-CSDataScience/Christoph Schwerdtfeger/Coding Projects/LeagueSimulator_Claude/League-Simulator-Update')
source("~/Library/CloudStorage/Dropbox-CSDataScience/Christoph Schwerdtfeger/Coding Projects/LeagueSimulator_Claude/League-Simulator-Update/run_single_update.R")
cat("=== Running Single Update for Season 2025 ===\n\n")
#!/usr/bin/env Rscript
# Script to run a single update for season 2025
# This will generate initial prognoses and update the Shiny app
cat("=== Running Single Update for Season 2025 ===\n\n")
# Set working directory to project root
setwd(dirname(dirname(rstudioapi::getSourceEditorContext()$path)))
# Source the update function
source("RCode/update_all_leagues_loop.R")
setwd("~/Library/CloudStorage/Dropbox-CSDataScience/Christoph Schwerdtfeger/Coding Projects/LeagueSimulator_Claude/League-Simulator-Update")
#!/usr/bin/env Rscript
# Script to run a single update for season 2025
# This will generate initial prognoses and update the Shiny app
cat("=== Running Single Update for Season 2025 ===\n\n")
# Source the update function
source("RCode/update_all_leagues_loop.R")
# Run a single update (loops = 1)
cat("Starting simulation for season 2025...\n")
cat("This will:\n")
cat("  1. Fetch current fixtures from API\n")
cat("  2. Run 10,000 simulations for each league\n")
cat("  3. Update the Shiny app with results\n\n")
# Run with:
# - duration = 480 (not used when loops = 1)
# - loops = 1 (single run)
# - initial_wait = 0 (no wait)
# - n = 10000 (number of simulations)
# - saison = "2025"
# - TeamList_file = path to 2025 team list
update_all_leagues_loop(
duration = 480,
loops = 1,
initial_wait = 0,
n = 10000,
saison = "2025",
TeamList_file = "RCode/TeamList_2025.csv"
)
#!/usr/bin/env Rscript
# Script to run a single update for season 2025
# Usage: Rscript run_single_update_2025.R
cat("=== Running Single Update for Season 2025 ===\n\n")
# Set working directory to project root
setwd(script_dir)
source("~/Library/CloudStorage/Dropbox-CSDataScience/Christoph Schwerdtfeger/Coding Projects/LeagueSimulator_Claude/League-Simulator-Update/RCode/update_all_leagues_loop.R")
update_all_leagues_loop(loops = 1, saison = "2025", TeamList_file = "RCode/TeamList_2025.csv")
update_all_leagues_loop(loops = 2, saison = "2025", TeamList_file = "RCode/TeamList_2025.csv")
rm(list = ls())
source('RCode/update_all_leagues_loop.R')
update_all_leagues_loop(loops = 1, saison = "2025", TeamList_file = "RCode/TeamList_2025.csv")
rm(list = ls())
source('RCode/update_all_leagues_loop.R')
update_all_leagues_loop(loops = 1, saison = "2025", TeamList_file = "RCode/TeamList_2025.csv")
rm(list = ls())
source('RCode/update_all_leagues_loop.R')
update_all_leagues_loop(loops = 1, saison = "2025", TeamList_file = "RCode/TeamList_2025.csv")
rm (list = ls())
source('RCode/update_all_leagues_loop.R')
update_all_leagues_loop(loops = 1, saison = "2025", TeamList_file = "RCode/TeamList_2025.csv")
rm (list = ls())
update_all_leagues_loop(loops = 1, saison = "2025", TeamList_file = "RCode/TeamList_2025.csv")
source('RCode/update_all_leagues_loop.R')
update_all_leagues_loop(loops = 1, saison = "2025", TeamList_file = "RCode/TeamList_2025.csv")
rm (list = ls())
source('RCode/update_all_leagues_loop.R')
update_all_leagues_loop(loops = 1, saison = "2025", TeamList_file = "RCode/TeamList_2025.csv")
rm (list = ls())
source('RCode/update_all_leagues_loop.R')
update_all_leagues_loop(loops = 1, saison = "2025", TeamList_file = "RCode/TeamList_2025.csv")
