# Optimized Dockerfile for League Simulator
# Multi-stage build for minimal image size

# Build stage - install all packages and dependencies
FROM rocker/r-ver:4.3.1 AS builder

# Install system dependencies required for R packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    libcurl4-openssl-dev \
    libssl-dev \
    libxml2-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /build

# Install renv for package management
RUN R -e "install.packages('renv', repos='https://cran.r-project.org')"

# Copy package files first for better caching
COPY renv.lock* ./
COPY packagelist.txt ./

# Install packages - prefer renv.lock if it exists
RUN if [ -f "renv.lock" ]; then \
        R -e "renv::restore()"; \
    else \
        Rscript -e "packages <- readLines('packagelist.txt'); \
        install.packages(packages, repos='https://cran.r-project.org', Ncpus=4)"; \
    fi

# Runtime stage - minimal image with only what's needed
FROM rocker/r-ver:4.3.1

# Install only runtime system dependencies
RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
    libcurl4 \
    libxml2 \
    && rm -rf /var/lib/apt/lists/*

# Set timezone
ENV TZ=Europe/Berlin
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Create non-root user
RUN useradd -m -u 1000 -s /bin/bash appuser

# Copy installed R packages from builder
COPY --from=builder /usr/local/lib/R/site-library /usr/local/lib/R/site-library

# Copy application files with correct ownership
COPY --chown=appuser:appuser ShinyApp/ /ShinyApp/
COPY --chown=appuser:appuser RCode/ /RCode/

# Create data directory
RUN mkdir -p /ShinyApp/data && chown appuser:appuser /ShinyApp/data

# Create health check script
RUN echo '#!/usr/bin/env Rscript\n\
library(httr)\n\
library(jsonlite)\n\
tryCatch({\n\
  # Check if required packages can be loaded\n\
  libs <- c("shiny", "ggplot2", "reshape2", "rsconnect")\n\
  for (lib in libs) {\n\
    library(lib, character.only = TRUE)\n\
  }\n\
  # Check if data directory is accessible\n\
  if (!dir.exists("/ShinyApp/data")) {\n\
    stop("Data directory not accessible")\n\
  }\n\
  cat("HEALTHY\n")\n\
  quit(status = 0)\n\
}, error = function(e) {\n\
  cat("UNHEALTHY:", conditionMessage(e), "\n")\n\
  quit(status = 1)\n\
})' > /usr/local/bin/healthcheck.R && \
chmod +x /usr/local/bin/healthcheck.R

# Switch to non-root user
USER appuser
WORKDIR /RCode

# Health check - runs every 30 seconds
HEALTHCHECK --interval=30s --timeout=5s --start-period=45s --retries=3 \
  CMD ["/usr/local/bin/healthcheck.R"]

# Environment variables (document required vars)
# Required at runtime:
# - SHINYAPPS_IO_SECRET: ShinyApps.io deployment secret
# - RAPIDAPI_KEY: RapidAPI key for data fetching
# - DURATION: Update loop duration in minutes
# - SEASON: Season year (e.g., "2024")

# Default command - run the update scheduler
CMD ["R", "--save", "--restore", "-f", "/RCode/updateScheduler.R"]