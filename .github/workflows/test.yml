name: R Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        r-version: ['4.3.1']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up R ${{ matrix.r-version }}
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ matrix.r-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev
    
    - name: Cache R packages
      uses: actions/cache@v3
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-r-${{ matrix.r-version }}-${{ hashFiles('packagelist.txt') }}
        restore-keys: |
          ${{ runner.os }}-r-${{ matrix.r-version }}-
    
    - name: Install R dependencies
      run: |
        install.packages('remotes')
        packages <- readLines('packagelist.txt')
        packages <- trimws(packages)
        packages <- packages[packages != ""]
        remotes::install_cran(packages)
        remotes::install_cran('testthat')
      shell: Rscript {0}
    
    - name: Compile C++ code
      run: |
        cd RCode
        R CMD SHLIB SpielNichtSimulieren.cpp
        cd ..
    
    - name: Run tests
      run: |
        source("tests/testthat.R")
      shell: Rscript {0}
    
    - name: Check package loading
      run: |
        packages <- readLines('packagelist.txt')
        packages <- trimws(packages)
        packages <- packages[packages != ""]
        for (pkg in packages) {
          library(pkg, character.only = TRUE)
          cat(paste("Successfully loaded:", pkg, "\n"))
        }
      shell: Rscript {0}