name: Quarantine Flaky Tests

on:
  schedule:
    # Run daily at 3 AM UTC
    - cron: '0 3 * * *'
  workflow_dispatch:
  workflow_run:
    workflows: ["R Tests"]
    types: [completed]

jobs:
  analyze-flaky-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.3.1'
    
    - name: Install required packages
      run: |
        install.packages("jsonlite", repos = "https://cloud.r-project.org")
      shell: Rscript {0}
    
    - name: Generate flaky test report
      run: |
        Rscript .github/scripts/flaky-test-detector.R report
    
    - name: Check for quarantined tests
      id: check
      run: |
        if [ -f ".github/quarantined-tests.csv" ]; then
          echo "has_quarantined=true" >> $GITHUB_OUTPUT
          echo "Quarantined tests found:"
          cat .github/quarantined-tests.csv
        else
          echo "has_quarantined=false" >> $GITHUB_OUTPUT
          echo "No flaky tests to quarantine"
        fi
    
    - name: Create test skip configuration
      if: steps.check.outputs.has_quarantined == 'true'
      run: |
        # Create R configuration for skipping flaky tests
        cat > tests/testthat/helper-skip-flaky.R << 'EOF'
        # Auto-generated file to skip flaky tests
        # Generated: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
        
        .flaky_tests <- tryCatch({
          read.csv(".github/quarantined-tests.csv", stringsAsFactors = FALSE)$test
        }, error = function(e) character(0))
        
        skip_if_flaky <- function(test_name) {
          if (test_name %in% .flaky_tests) {
            skip(paste("Skipping flaky test:", test_name))
          }
        }
        
        # Helper to wrap test_that with flaky detection
        test_that_stable <- function(desc, code) {
          skip_if_flaky(desc)
          test_that(desc, code)
        }
        EOF
        
        echo "Created flaky test skip configuration"
    
    - name: Create pull request
      if: steps.check.outputs.has_quarantined == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: quarantine flaky tests"
        title: "Quarantine Flaky Tests"
        body: |
          ## Automated Flaky Test Quarantine
          
          This PR automatically quarantines tests that have been identified as flaky based on their failure patterns.
          
          ### Quarantined Tests
          
          The following tests have been quarantined:
          
          ```
          $(cat .github/quarantined-tests.csv 2>/dev/null || echo "No tests quarantined")
          ```
          
          ### What This Does
          
          - Creates a helper file that skips flaky tests during CI runs
          - Maintains a list of quarantined tests in `.github/quarantined-tests.csv`
          - Tests can be un-quarantined by removing them from the CSV file
          
          ### Next Steps
          
          1. Review the quarantined tests
          2. Fix the underlying issues causing flakiness
          3. Remove tests from quarantine once they're stable
          
          ---
          *This PR was automatically generated by the flaky test detection system.*
        branch: auto/quarantine-flaky-tests
        delete-branch: true
        labels: |
          ci-improvement
          automated
    
    - name: Create or update flaky test issue
      if: steps.check.outputs.has_quarantined == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          // Read the flaky test report
          let reportContent = 'No detailed report available';
          try {
            const files = fs.readdirSync('.github/failure-analysis').filter(f => f.startsWith('analysis_'));
            if (files.length > 0) {
              const latestReport = files.sort().reverse()[0];
              reportContent = fs.readFileSync(`.github/failure-analysis/${latestReport}`, 'utf8');
            }
          } catch (e) {
            console.error('Could not read analysis report:', e.message);
          }
          
          const issueBody = `
          ## Flaky Tests Detected
          
          The automated flaky test detection system has identified tests with inconsistent behavior.
          
          ### Current Status
          
          ${reportContent}
          
          ### Action Required
          
          1. Review the tests listed above
          2. Investigate the root causes of flakiness
          3. Fix the underlying issues
          4. Remove tests from quarantine once stable
          
          ### Tracking
          
          - Quarantine PR: See latest PR with \`auto/quarantine-flaky-tests\` branch
          - Test History: Check \`.github/test-history.json\`
          - Quarantine List: \`.github/quarantined-tests.csv\`
          
          ---
          *This issue is automatically updated when new flaky tests are detected.*
          `;
          
          // Check for existing issue
          const issues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: 'flaky-tests',
            state: 'open'
          });
          
          if (issues.data.length > 0) {
            // Update existing issue
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issues.data[0].number,
              body: issueBody
            });
            console.log(`Updated flaky test issue #${issues.data[0].number}`);
          } else {
            // Create new issue
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🎲 Flaky Tests Detected',
              body: issueBody,
              labels: ['flaky-tests', 'ci-improvement', 'P2-Medium']
            });
          }