name: Docker Cache Builder

on:
  schedule:
    # Run daily at 2 AM UTC to rebuild caches
    - cron: '0 2 * * *'
  workflow_dispatch:
  push:
    paths:
      - 'Dockerfile.*'
      - 'packagelist.txt'
      - 'renv.lock'

env:
  REGISTRY: ghcr.io
  CACHE_TAG: cache

jobs:
  build-cache:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [league, shiny]
    
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          network=host
          image=moby/buildkit:v0.12.0
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Generate cache metadata
      id: cache-meta
      run: |
        # Create cache key based on dependencies
        DEPS_HASH=$(cat packagelist.txt renv.lock 2>/dev/null | sha256sum | cut -d' ' -f1 | cut -c1-12)
        echo "deps_hash=$DEPS_HASH" >> $GITHUB_OUTPUT
        echo "cache_tag=${{ env.REGISTRY }}/${{ github.repository }}-${{ matrix.service }}:cache-$DEPS_HASH" >> $GITHUB_OUTPUT
    
    - name: Build and push cache layers
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.${{ matrix.service }}
        target: builder
        push: true
        tags: ${{ steps.cache-meta.outputs.cache_tag }}
        cache-from: |
          type=registry,ref=${{ env.REGISTRY }}/${{ github.repository }}-${{ matrix.service }}:cache-latest
          type=registry,ref=${{ steps.cache-meta.outputs.cache_tag }}
        cache-to: type=inline
        build-args: |
          BUILDKIT_INLINE_CACHE=1
          R_VERSION=4.3.1
          NCPUS=4
    
    - name: Tag cache as latest
      run: |
        docker pull ${{ steps.cache-meta.outputs.cache_tag }}
        docker tag ${{ steps.cache-meta.outputs.cache_tag }} ${{ env.REGISTRY }}/${{ github.repository }}-${{ matrix.service }}:cache-latest
        docker push ${{ env.REGISTRY }}/${{ github.repository }}-${{ matrix.service }}:cache-latest
    
    - name: Generate cache report
      run: |
        echo "## Docker Cache Build Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Service: ${{ matrix.service }}" >> $GITHUB_STEP_SUMMARY
        echo "- Cache Tag: \`${{ steps.cache-meta.outputs.cache_tag }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- Dependencies Hash: \`${{ steps.cache-meta.outputs.deps_hash }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- Build Time: $(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        
        # Check image size
        docker images --format "table {{.Repository}}:{{.Tag}}\t{{.Size}}" | grep cache >> $GITHUB_STEP_SUMMARY