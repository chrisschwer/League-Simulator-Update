# Optimized Dockerfile for Shiny app updater container
# Multi-stage build for minimal image size

# Build stage - install all packages and dependencies
FROM rocker/r-ver:4.3.1 AS builder

# Install system dependencies required for R packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    libcurl4-openssl-dev \
    libssl-dev \
    libxml2-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /build

# Copy package files first for better caching
COPY packagelist.txt ./

# Install packages from packagelist.txt
RUN Rscript -e " \
    packages <- readLines('packagelist.txt'); \
    packages <- packages[!grepl('^#', packages) & nchar(trimws(packages)) > 0]; \
    packages <- trimws(packages); \
    install.packages(packages[!packages %in% installed.packages()[,'Package']], \
                     repos = 'https://cloud.r-project.org', Ncpus=4); \
    "

# Runtime stage - minimal image with only what's needed
FROM rocker/r-ver:4.3.1

# Install only runtime system dependencies
RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
    libcurl4 \
    libxml2 \
    && rm -rf /var/lib/apt/lists/*

# Set timezone
ENV TZ=Europe/Berlin
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Create non-root user
RUN useradd -m -u 1000 -s /bin/bash appuser

# Copy installed R packages from builder
COPY --from=builder /usr/local/lib/R/site-library /usr/local/lib/R/site-library

# Copy application files with correct ownership
COPY --chown=appuser:appuser ShinyApp/ /ShinyApp/
COPY --chown=appuser:appuser RCode/ /RCode/

# Create data directories
RUN mkdir -p /ShinyApp/data /RCode/league_results && \
    chown -R appuser:appuser /ShinyApp/data /RCode/league_results

# Create health check script
RUN echo '#!/usr/bin/env Rscript\n\
tryCatch({\n\
  # Check if required packages can be loaded\n\
  library(shiny)\n\
  library(rsconnect)\n\
  library(ggplot2)\n\
  # Check if directories are accessible\n\
  if (!dir.exists("/ShinyApp/data") || !dir.exists("/RCode/league_results")) {\n\
    stop("Required directories not accessible")\n\
  }\n\
  cat("HEALTHY\n")\n\
  quit(status = 0)\n\
}, error = function(e) {\n\
  cat("UNHEALTHY:", conditionMessage(e), "\n")\n\
  quit(status = 1)\n\
})' > /usr/local/bin/healthcheck.R && \
chmod +x /usr/local/bin/healthcheck.R

# Create startup script that runs shiny_scheduler.R
RUN echo '#!/usr/bin/env Rscript\n\
source("/RCode/shiny_scheduler.R")\n\
\n\
# Get environment variables\n\
update_interval <- as.numeric(Sys.getenv("UPDATE_INTERVAL", "300"))\n\
\n\
# Run the Shiny scheduler\n\
shiny_scheduler(update_interval = update_interval,\n\
               results_dir = "/RCode/league_results/")\n' > /RCode/run_shiny_updater.R && \
chown appuser:appuser /RCode/run_shiny_updater.R && \
chmod +x /RCode/run_shiny_updater.R

# Switch to non-root user
USER appuser
WORKDIR /RCode

# Volume for reading results (shared with league updaters)
VOLUME ["/RCode/league_results"]

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=45s --retries=3 \
  CMD ["/usr/local/bin/healthcheck.R"]

# Environment variables documentation:
# Required: SHINYAPPS_IO_SECRET
# Optional: UPDATE_INTERVAL (default: 300 seconds)

CMD ["Rscript", "/RCode/run_shiny_updater.R"]